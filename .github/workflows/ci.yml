name: CI — WebSolution (.NET API + Frontend)

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Build & Test — .NET WebSolution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # DEBUG: list where the solution actually is (first run only)
      - name: Find solutions and projects
        run: |
          echo "Solutions:"; ls -la ChineseChess.WebSolution/*.sln || true
          echo "Projects:";  find ChineseChess.WebSolution -name "*.csproj" -maxdepth 3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore ChineseChess.WebSolution/ChineseChess.Web.sln

      - name: Build (Release)
        run: dotnet build ChineseChess.WebSolution/ChineseChess.Web.sln --no-restore -c Release

      - name: Test (Engine tests)
        run: dotnet test ChineseChess.WebSolution/ChineseChess.Engine.Tests/ChineseChess.Engine.Tests.csproj --no-build -c Release --logger "trx;LogFileName=test_results.trx" --collect:"XPlat Code Coverage"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-test-results
          path: |
            **/TestResults/**/*.trx
            **/TestResults/**/coverage.cobertura.xml
          if-no-files-found: ignore

      - name: Publish API
        run: dotnet publish ChineseChess.WebSolution/ChineseChess.Api/ChineseChess.Api.csproj -c Release -o ChineseChess.WebSolution/publish

      - name: Upload API publish
        uses: actions/upload-artifact@v4
        with:
          name: api-publish
          path: ChineseChess.WebSolution/publish

  frontend:
    name: Build — Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ChineseChess.WebSolution/ChineseChess.Frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json # <<< adjust if yarn/pnpm

      - name: Install
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Test
        run: npm test --if-present -- --ci --watchAll=false

      - name: Build
        run: npm run build

      - name: Upload Web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: |
            frontend/build
            frontend/dist
          if-no-files-found: ignore
